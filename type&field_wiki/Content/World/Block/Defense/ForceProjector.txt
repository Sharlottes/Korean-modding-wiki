2020-09-20

타입 이름: ForceProjector
포함 대상: Block
타입 종류: 클래스

설명:
    보호막 프로젝터를 생각해 보자.

일반 필드
    phaseUseTime: float [기본값: 350][메타 사용 주기, 60으로 나누면 초 단위]
    phaseRadiusBoost: float	[기본값: 80][가속 시 radius에 더함]
    phaseShieldBoost: float [기본값: 400][가속 시 breakage에 더함]
    radius: float [기본값: 101.7][기본 범주, 8로 나누면 타일 단위. 꼭짓점 끝과의 거리를 기준으로 함]
    breakage: float	[기본값: 550][보호막 hp]
    cooldownNormal: float [기본값: 1.75][보호막 회복 연산에 사용됨, 아래에서 후술]
    cooldownLiquid: float [기본값: 1.5][보호막 회복 연산에 사용됨, 아래에서 후술]
    cooldownBrokenBase: float [기본값: 0.35][보호막 회복 연산에 사용됨, 아래에서 후술]
    basePowerDraw: float [기본값: 0.2][???]

특이사항(기본값 필드)
    update: boolean [기본값: true][TileEntity 를 가짐으로써 다른 엔티티와 상호작용하는 여부]
    solid: boolean [기본값: true][지상 유닛이 지나갈 수 없는 여부]
    hasItems: boolean [기본값: true][아이템을 보유하는 여부]
    canOverdrive: boolean [기본값: false][과부하를 받는 여부]
    hasLiquids: boolean [기본값: true][액체를 보유하는 여부]
    hasPower: boolean [기본값: true][전력을 보유하는 여부]
    consumes: {Consumers} [기본값: {cold-liquid}][요구 아이템 및 액체, 전기 등.. Consumers 문서 참고]

특이사항(스프라이트)
    이름-top: 보호막이 과부화되는걸 표시하는 부분

특이사항(cold-liquid)
    액체의
        온도가 0.5 이하여야 합니다.
        인화성이 0.1 이하여야 합니다.
        booster 가 true 여야 합니다.
        optional 가 true 여야 합니다.
        update 가 false 여야 합니다.

특이사항(보호막 연산)
    보호막의 hp를..
        보호막이 켜졌을 때
            틱당 1.5 회복
        보호막이 켜지고 액체가 들어갔을 때
            틱당 1.5*1.75*(1+(액체의 heatCapacity-0.4)*0.9) 회복
        보호막이 꺼졌을 때
            틱당 cooldownBrokenBase 만큼 회복
        보호막이 꺼지고 액체가 들어갔을 때
            틱당 cooldownBrokenBase*1.75*(1+(액체의 heatCapacity-0.4)*0.9) 회복